plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

configurations {
	rusherhackApi
	rusherhackApi.canBeResolved(true)
	compileOnly.extendsFrom(rusherhackApi)
}

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "rusherhack"
		//releases repository will have the latest api version for last stable rusherhack release
		//snapshots will always be the latest api version
		//url = "https://maven.rusherhack.org/releases"
		url = "https://maven.rusherhack.org/snapshots"
	}

	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}

	maven {
		name = "Meteor Dev Releases"
		url = "https://maven.meteordev.org/releases"
	}

	maven {
		name = "Meteor Dev Snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/nuker.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation files("libs/nether-pathfinder-1.4.1.jar")
	modImplementation files("libs/baritone-api-fabric-1.10.2.jar")
	modImplementation files("libs/malilib-fabric-1.20.4-0.18.1.jar")
	modImplementation files("libs/litematica-fabric-1.20.4-0.17.2.jar")

	modImplementation "com.ptsmods:devlogin:3.4.1"

	modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

	// Rusherhack API
	rusherhackApi files("libs/rusherhack-api-1.20.4-yarn.jar")

	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
}

processResources {
	inputs.property "mod_version", project.version

	filesMatching("rusherhack-plugin.json") {
		expand "mod_version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}